version: '3'
services:
  main:
    build:
      context: .
    restart: always
    privileged: true
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - projects:/usr/src/share
      # - ./_projects:/usr/src/projects
    environment:
      PORT: '${PORT}'
      GITHUB_USER: '${GITHUB_USER}'
      GITHUB_TOKEN: '${GITHUB_TOKEN}'
      PROJECTS: '${PROJECTS}'
      PROJECTS_ROOT_DIR: '/usr/src/projects'
      LOCALTUNNEL_HOST: '${LOCALTUNNEL_HOST}'
      LOCALTUNNEL_API_TOKEN: '${LOCALTUNNEL_API_TOKEN}'
      LOCALTUNNEL_BASIC_AUTH: '${LOCALTUNNEL_BASIC_AUTH}'
      NGROK_AUTH_TOKEN: '${NGROK_AUTH_TOKEN}'
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '5m'
  launcher:
    build:
      context: .
      dockerfile: Dockerfile-launcher
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - projects:/usr/src/share
    environment:
      PORT: '${PORT}'
      GITHUB_USER: '${GITHUB_USER}'
      GITHUB_TOKEN: '${GITHUB_TOKEN}'
      PROJECTS: '${PROJECTS}'
      PROJECTS_ROOT_DIR: '/usr/src/projects'
      LOCALTUNNEL_HOST: '${LOCALTUNNEL_HOST}'
      LOCALTUNNEL_API_TOKEN: '${LOCALTUNNEL_API_TOKEN}'
      LOCALTUNNEL_BASIC_AUTH: '${LOCALTUNNEL_BASIC_AUTH}'
      NGROK_AUTH_TOKEN: '${NGROK_AUTH_TOKEN}'
      PI_DAB_DIR: '/usr/src/share/pi-dab'
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '2m'
volumes:
  projects: